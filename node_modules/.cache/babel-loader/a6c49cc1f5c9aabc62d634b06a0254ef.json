{"ast":null,"code":"var _jsxFileName = \"/Users/rodel/coding/akin/kv-wasp-client/src/Layouts/Pages/Dashboard/DashboardContainer.js\";\nimport React, { PureComponent } from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport Radial from \"../../Chart/Radial\";\nimport RadialGradient from \"../../Chart/RadialGradient\";\nimport RadialSemiCircle from \"../../Chart/RadialSemiCircle\";\nimport RadialStroked from \"../../Chart/RadialStroked\";\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// let timer = 60;\nlet isLoading = false;\nlet timeInterval = 10;\n\nclass DashboardContainer extends PureComponent {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {};\n    this.timeMsg = 'Until refresh';\n    this.timer = 10;\n    this.deviceData = {\n      Altitude: 0,\n      Created: \"\",\n      Humidity: 0,\n      Light: 0,\n      Nitrogen: 0,\n      Phosphorous: 0,\n      Potassium: 0,\n      Pressure: 0,\n      SoilMoisture: 0,\n      Temperature: 0,\n      WaterFlow: 0\n    };\n  }\n\n  componentWillMount() {\n    console.log('componentWillMount'); // const {fetchDashboard, resetDashboard } = this.props;\n\n    setTimeout(() => {\n      console.log('componentWillMount refreshing ...');\n      this.props.fetchDashboard('all');\n    }, 1000);\n  }\n\n  componentDidMount() {\n    console.log('componentDidMount', this.timer);\n    this.timer = setInterval(() => {\n      this.isLoading = true;\n      console.log('componentDidMount refreshing ...');\n      this.props.fetchDashboard('all');\n    }, timeInterval * 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  render() {\n    const {\n      fetchDashboard,\n      resetDashboard,\n      dashboardState\n    } = this.props;\n    console.log('dashboardState', dashboardState);\n    console.log('dashboardState data', dashboardState.data);\n    let data = [];\n\n    if (dashboardState && dashboardState.status === 'Succeed') {\n      console.log('deviceData ', new Date());\n      console.log('deviceData', dashboardState.data.data[0]);\n      this.deviceData = dashboardState.data.data[0];\n      this.setState({ ...this.state,\n        data: dashboardState.data.data[0]\n      });\n      console.log('deviceData', this.deviceData);\n      console.log('this.state', this.state); // console.log('this.state.data.Temperature', this.state.data.Temperature);\n\n      this.isLoading = false;\n    }\n\n    const renderTime = ({\n      remainingTime\n    }) => {\n      if (remainingTime === 1) {\n        this.timeMsg = 'Refreshing';\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timer\",\n          style: {\n            color: 'red',\n            'fontSize': '10px'\n          },\n          children: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 16\n        }, this);\n      } else {\n        this.timeMsg = 'Until Refresh';\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timer\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"value\",\n            style: {\n              color: 'yellow',\n              'fontSize': '10px'\n            },\n            children: remainingTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }, this);\n      }\n    };\n\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this), !this.isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: this.isLoading ? \"none\" : \"block\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            'margin-left': '50px',\n            display: 'flex'\n          },\n          children: [/*#__PURE__*/_jsxDEV(CountdownCircleTimer, {\n            isPlaying: true,\n            duration: this.timer,\n            colors: [[\"#004777\", 0.33], [\"#F7B801\", 0.33], [\"#A30000\"]],\n            size: 30,\n            strokeWidth: 3,\n            onComplete: () => [true, 1000],\n            children: renderTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: 'white',\n              'font-size': '14px'\n            },\n            children: [\"\\xA0\\xA0\", this.timeMsg]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: 'white',\n              'fontSize': '14px'\n            },\n            children: [\"\\xA0\\xA0\\xA0Data shown are collected recorded on\\xA0\", this.deviceData.Created]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-inner\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"div-dash\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"row rptpad div-dash-head\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"row st-no-pad-no-margin\",\n                children: /*#__PURE__*/_jsxDEV(RadialStroked, {\n                  series: [this.deviceData.Temperature],\n                  label: ['Temperature'],\n                  unit: 'Farenheiht'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"div-dash\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"row rptpad div-dash-head\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"row st-no-pad-no-margin\",\n                children: /*#__PURE__*/_jsxDEV(RadialStroked, {\n                  series: [this.deviceData.Pressure],\n                  label: ['Pressure (psi)'],\n                  unit: 'psi'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"div-dash\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"row rptpad div-dash-head\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"row st-no-pad-no-margin\",\n                children: /*#__PURE__*/_jsxDEV(RadialStroked, {\n                  series: [this.deviceData.Altitude],\n                  label: ['Altitude (mbar)'],\n                  unit: 'mbar'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"div-dash\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"row rptpad div-dash-head\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"row st-no-pad-no-margin\",\n                children: /*#__PURE__*/_jsxDEV(RadialStroked, {\n                  series: [this.deviceData.Humidity],\n                  label: ['Humidity'],\n                  unit: ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"div-dash\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"row rptpad div-dash-head\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"row st-no-pad-no-margin\",\n                children: /*#__PURE__*/_jsxDEV(RadialStroked, {\n                  series: [this.deviceData.SoilMoisture],\n                  label: ['Soil Moisture (%)'],\n                  unit: 'percent'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"div-dash\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"row rptpad div-dash-head\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"row st-no-pad-no-margin\",\n                children: /*#__PURE__*/_jsxDEV(RadialStroked, {\n                  series: [this.deviceData.Light],\n                  label: ['Light Intensity (lux)'],\n                  unit: 'lux'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"div-dash\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"row rptpad div-dash-head\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"row st-no-pad-no-margin\",\n                children: /*#__PURE__*/_jsxDEV(RadialStroked, {\n                  series: [this.deviceData.WaterFlow],\n                  label: ['Flow Meter (per min)'],\n                  unit: 'per min'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"div-dash\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"row rptpad div-dash-head\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"row st-no-pad-no-margin\",\n                children: /*#__PURE__*/_jsxDEV(RadialStroked, {\n                  series: [this.deviceData.Nitrogen],\n                  label: ['Nitrogen (mg/dL)'],\n                  unit: 'mg/dL'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"div-dash\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"row rptpad div-dash-head\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"row st-no-pad-no-margin\",\n                children: /*#__PURE__*/_jsxDEV(RadialStroked, {\n                  series: [this.deviceData.Phosphorous],\n                  label: ['Phosphorous (mg/dL)'],\n                  unit: 'mg/dL'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"div-dash\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"row rptpad div-dash-head\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"row st-no-pad-no-margin\",\n                children: /*#__PURE__*/_jsxDEV(RadialStroked, {\n                  series: [this.deviceData.Potassium],\n                  label: ['Potassium (ppm)'],\n                  unit: 'ppm'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(DashboardContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/rodel/coding/akin/kv-wasp-client/src/Layouts/Pages/Dashboard/DashboardContainer.js"],"names":["React","PureComponent","withRouter","Link","Radial","RadialGradient","RadialSemiCircle","RadialStroked","CountdownCircleTimer","isLoading","timeInterval","DashboardContainer","constructor","props","context","state","timeMsg","timer","deviceData","Altitude","Created","Humidity","Light","Nitrogen","Phosphorous","Potassium","Pressure","SoilMoisture","Temperature","WaterFlow","componentWillMount","console","log","setTimeout","fetchDashboard","componentDidMount","setInterval","componentWillUnmount","clearInterval","render","resetDashboard","dashboardState","data","status","Date","setState","renderTime","remainingTime","color","display"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { withRouter, Link } from 'react-router-dom';\n\nimport Radial from \"../../Chart/Radial\";\nimport RadialGradient from \"../../Chart/RadialGradient\";\nimport RadialSemiCircle from \"../../Chart/RadialSemiCircle\";\nimport RadialStroked from \"../../Chart/RadialStroked\";\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer'\n\ntype State = {\n\n}\n\ntype Props = {\n    dashboardState : Object,\n    fetchDashboard: Function,\n    resetDashboard: Function\n}\n// let timer = 60;\n\nlet isLoading = false;\nlet timeInterval = 10;\n\n\n\nclass DashboardContainer extends PureComponent<Props, State> {\n\n  constructor(props: Props, context: Context) {\n    super(props, context);\n    this.state = {\n    }\n    this.timeMsg = 'Until refresh';\n    this.timer = 10;\n    this.deviceData = {\n      Altitude: 0,\n      Created: \"\",\n      Humidity: 0,\n      Light: 0,\n      Nitrogen: 0,\n      Phosphorous: 0,\n      Potassium: 0,\n      Pressure: 0,\n      SoilMoisture: 0,\n      Temperature: 0,\n      WaterFlow: 0\n    }\n  }\n\n\n  componentWillMount() {\n    console.log('componentWillMount');\n    // const {fetchDashboard, resetDashboard } = this.props;\n    setTimeout(() => {\n      console.log('componentWillMount refreshing ...');\n\t\t\tthis.props.fetchDashboard('all');\n\t\t}, 1000);\n  }\n\n  componentDidMount() {\n    console.log('componentDidMount', this.timer);\n    this.timer = setInterval(() => {\n      this.isLoading = true;\n      console.log('componentDidMount refreshing ...');\n      this.props.fetchDashboard('all');\n    },(timeInterval * 1000))\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  render() {\n    const { fetchDashboard, resetDashboard, dashboardState } = this.props;\n    console.log('dashboardState', dashboardState);\n    console.log('dashboardState data', dashboardState.data);\n    let data = [] ; \n    if (dashboardState && dashboardState.status === 'Succeed') {\n      console.log('deviceData ', new Date());\n      console.log('deviceData', dashboardState.data.data[0]);\n      this.deviceData = dashboardState.data.data[0];\n      this.setState({\n\t\t\t\t...this.state,\n        data: dashboardState.data.data[0]\n      })\n      console.log('deviceData', this.deviceData);\n      console.log('this.state', this.state);\n      // console.log('this.state.data.Temperature', this.state.data.Temperature);\n      this.isLoading = false;\n    } \n\n    const renderTime = ({ remainingTime }) => {\n      if (remainingTime === 1) {\n        this.timeMsg = 'Refreshing';\n        return <div className=\"timer\" style={{color: 'red', 'fontSize': '10px'}}>0</div>;\n      } else {\n        this.timeMsg = 'Until Refresh';\n      return (\n        <div className=\"timer\">\n          <div className=\"value\" style={{color: 'yellow', 'fontSize': '10px'}}>{remainingTime}</div>\n          {/* <div className=\"text\">Refresh in&nbsp;{remainingTime}&nbsp;seconds</div>\n          <div className=\"value\">{remainingTime}</div>\n          <div className=\"text\">seconds</div>  */}\n        </div>\n      );\n    }\n    };\n\n    return (\n    \n        <React.Fragment>\n            {/* <div style={{'margin-left': '50px'}}>\n                <p style={{color: 'white'}}>Reading @ Oct 23, 2021 10:30AM</p>\n            </div> */}\n            \n            <br/>\n            {!this.isLoading &&\n            <div style={{ display: this.isLoading ? \"none\" : \"block\" }}>\n              <div style={{'margin-left': '50px', display: 'flex'}}>\n                <CountdownCircleTimer\n                  isPlaying\n                  duration={this.timer}\n                  colors={[[\"#004777\", 0.33], [\"#F7B801\", 0.33], [\"#A30000\"]]}\n                  size={30}\n                  strokeWidth={3}\n                  onComplete={() => [true, 1000]}\n                >\n                  {renderTime}\n                </CountdownCircleTimer>\n                <span style={{color: 'white', 'font-size': '14px'}}>&nbsp;&nbsp;{this.timeMsg}</span>\n                <span style={{color: 'white', 'fontSize': '14px'}}>&nbsp;&nbsp;&nbsp;Data shown are collected recorded on&nbsp;{this.deviceData.Created}</span>\n              </div>\n              <br/>\n              <div className=\"mt-inner\">\n                   <div class=\"div-dash\">\n                    <div class=\"row rptpad div-dash-head\">\n                      <div class=\"row st-no-pad-no-margin\">\n                      <RadialStroked\n                        series={[this.deviceData.Temperature]}\n                        label={['Temperature']}\n                        unit={'Farenheiht'}\n                      />\n                      </div>\n                    </div>\n                  </div>\n\n                   <div class=\"div-dash\">\n                    <div class=\"row rptpad div-dash-head\">\n                      <div class=\"row st-no-pad-no-margin\">\n                      <RadialStroked\n                        series={[this.deviceData.Pressure]}\n                        label={['Pressure (psi)']}\n                        unit={'psi'}\n                      />\n                      </div>\n                    </div>\n                  </div>\n\n\n                   <div class=\"div-dash\">\n                    <div class=\"row rptpad div-dash-head\">\n                      <div class=\"row st-no-pad-no-margin\">\n                      <RadialStroked\n                        series={[this.deviceData.Altitude]}\n                        label={['Altitude (mbar)']}\n                        unit={'mbar'}\n                      />\n                      </div>\n                    </div>\n                  </div>\n\n                   <div class=\"div-dash\">\n                    <div class=\"row rptpad div-dash-head\">\n                      <div class=\"row st-no-pad-no-margin\">\n                      <RadialStroked\n                        series={[this.deviceData.Humidity]}\n                        label={['Humidity']}\n                        unit={''}\n                      />\n                      </div>\n                    </div>\n                  </div>\n\n                  <div class=\"div-dash\">\n                    <div class=\"row rptpad div-dash-head\">\n                      <div class=\"row st-no-pad-no-margin\">\n                      <RadialStroked\n                        series={[this.deviceData.SoilMoisture]}\n                        label={['Soil Moisture (%)']}\n                        unit={'percent'}\n                      />\n                      </div>\n                    </div>\n                  </div>\n\n                  <div class=\"div-dash\">\n                    <div class=\"row rptpad div-dash-head\">\n                      <div class=\"row st-no-pad-no-margin\">\n                      <RadialStroked\n                        series={[this.deviceData.Light]}\n                        label={['Light Intensity (lux)']}\n                        unit={'lux'}\n                      />\n                      </div>\n                    </div>\n                  </div>\n\n                  <div class=\"div-dash\">\n                    <div class=\"row rptpad div-dash-head\">\n                      <div class=\"row st-no-pad-no-margin\">\n                      <RadialStroked\n                        series={[this.deviceData.WaterFlow]}\n                        label={['Flow Meter (per min)']}\n                        unit={'per min'}\n                      />\n                      </div>\n                    </div>\n                  </div>\n\n                   <div class=\"div-dash\">\n                    <div class=\"row rptpad div-dash-head\">\n                      <div class=\"row st-no-pad-no-margin\">\n                      <RadialStroked\n                        series={[this.deviceData.Nitrogen]}\n                        label={['Nitrogen (mg/dL)']}\n                        unit={'mg/dL'}\n                      />\n                      </div>\n                    </div>\n                  </div>\n\n                   <div class=\"div-dash\">\n                    <div class=\"row rptpad div-dash-head\">\n                      <div class=\"row st-no-pad-no-margin\">\n                      <RadialStroked\n                        series={[this.deviceData.Phosphorous]}\n                        label={['Phosphorous (mg/dL)']}\n                        unit={'mg/dL'}\n                      />\n                      </div>\n                    </div>\n                  </div>\n\n                  <div class=\"div-dash\">\n                    <div class=\"row rptpad div-dash-head\">\n                      <div class=\"row st-no-pad-no-margin\">\n                      <RadialStroked\n                        series={[this.deviceData.Potassium]}\n                        label={['Potassium (ppm)']}\n                        unit={'ppm'}\n                      />\n                      </div>\n                    </div>\n                  </div>\n              </div>\n            </div>\n            }\n        </React.Fragment>\n    );\n  }\n}\n\nexport default withRouter(DashboardContainer);\n"]},"metadata":{},"sourceType":"module"}