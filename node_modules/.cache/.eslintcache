[{"/Users/rodel/coding/akin/waps-client/src/index.js":"1","/Users/rodel/coding/akin/waps-client/src/registerServiceWorker.js":"2","/Users/rodel/coding/akin/waps-client/src/App.js":"3","/Users/rodel/coding/akin/waps-client/src/store/sagas/rootSaga.js":"4","/Users/rodel/coding/akin/waps-client/src/store/reducers/dashboard.js":"5","/Users/rodel/coding/akin/waps-client/src/store/reducers/chart.js":"6","/Users/rodel/coding/akin/waps-client/src/store/sagas/chartSaga.js":"7","/Users/rodel/coding/akin/waps-client/src/store/sagas/dashboardSaga.js":"8","/Users/rodel/coding/akin/waps-client/src/store/actions/dashboardAction.js":"9","/Users/rodel/coding/akin/waps-client/src/utils/constants.js":"10","/Users/rodel/coding/akin/waps-client/src/store/actions/chartAction.js":"11","/Users/rodel/coding/akin/waps-client/src/Layouts/Pages/Dashboard/index.js":"12","/Users/rodel/coding/akin/waps-client/src/Layouts/Pages/Chart/index.js":"13","/Users/rodel/coding/akin/waps-client/src/Layouts/Pages/Setting/index.js":"14","/Users/rodel/coding/akin/waps-client/src/utils/helperFunctions.js":"15","/Users/rodel/coding/akin/waps-client/src/Layouts/Pages/Dashboard/DashboardContainer.js":"16","/Users/rodel/coding/akin/waps-client/src/Layouts/Pages/Setting/SettingContainer.js":"17","/Users/rodel/coding/akin/waps-client/src/Layouts/Pages/Chart/ChartContainer.js":"18","/Users/rodel/coding/akin/waps-client/src/store/selectors/chartSelector.js":"19","/Users/rodel/coding/akin/waps-client/src/store/selectors/dashboardSelector.js":"20","/Users/rodel/coding/akin/waps-client/src/Layouts/Chart/RadialStroked.js":"21","/Users/rodel/coding/akin/waps-client/src/Layouts/Chart/AreaTimeSeries.js":"22","/Users/rodel/coding/akin/waps-client/src/Layouts/Chart/LineSmooth.js":"23"},{"size":1190,"mtime":1635574267920,"results":"24","hashOfConfig":"25"},{"size":4218,"mtime":1635025243569,"results":"26","hashOfConfig":"25"},{"size":8151,"mtime":1635043790151,"results":"27","hashOfConfig":"25"},{"size":211,"mtime":1635576087282,"results":"28","hashOfConfig":"25"},{"size":1658,"mtime":1635094670540,"results":"29","hashOfConfig":"25"},{"size":1530,"mtime":1635574234078,"results":"30","hashOfConfig":"25"},{"size":2665,"mtime":1635658490856,"results":"31","hashOfConfig":"25"},{"size":1256,"mtime":1635580487221,"results":"32","hashOfConfig":"25"},{"size":977,"mtime":1635573788740,"results":"33","hashOfConfig":"25"},{"size":225,"mtime":1635025745798,"results":"34","hashOfConfig":"25"},{"size":861,"mtime":1635573838210,"results":"35","hashOfConfig":"25"},{"size":648,"mtime":1635299162189,"results":"36","hashOfConfig":"25"},{"size":614,"mtime":1635701318588,"results":"37","hashOfConfig":"25"},{"size":642,"mtime":1635043755790,"results":"38","hashOfConfig":"25"},{"size":160,"mtime":1635025080928,"results":"39","hashOfConfig":"25"},{"size":8755,"mtime":1638307938439,"results":"40","hashOfConfig":"25"},{"size":931,"mtime":1635575477938,"results":"41","hashOfConfig":"25"},{"size":5843,"mtime":1635807963907,"results":"42","hashOfConfig":"25"},{"size":183,"mtime":1635573891378,"results":"43","hashOfConfig":"25"},{"size":203,"mtime":1635024237525,"results":"44","hashOfConfig":"25"},{"size":2480,"mtime":1638326933626,"results":"45","hashOfConfig":"25"},{"size":13348,"mtime":1635639008390,"results":"46","hashOfConfig":"25"},{"size":3003,"mtime":1635807944638,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"13bm3ea",{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"50"},"/Users/rodel/coding/akin/waps-client/src/index.js",[],["101","102"],"/Users/rodel/coding/akin/waps-client/src/registerServiceWorker.js",[],"/Users/rodel/coding/akin/waps-client/src/App.js",[],"/Users/rodel/coding/akin/waps-client/src/store/sagas/rootSaga.js",[],"/Users/rodel/coding/akin/waps-client/src/store/reducers/dashboard.js",[],"/Users/rodel/coding/akin/waps-client/src/store/reducers/chart.js",[],"/Users/rodel/coding/akin/waps-client/src/store/sagas/chartSaga.js",["103","104"],"// @flow\n\nimport { takeLatest, put } from 'redux-saga/effects';\n// import TOAST from '../../modules/toastManager';\nimport axios from 'axios';\nimport { handleSagaError } from '../../utils/helperFunctions';\n\nimport {\n  CHART_ACTIONS,\n  setGetChartSucceed,\n  setGetChartFailure\n} from '../actions/chartAction';\n\nconst RESOURCE_PREFIX = 'http://localhost:3000/sensors/historical';\nconst headers = {\n  \"Access-Control-Allow-Origin\": \"*\",\n    \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\"\n  // 'Content-Type' : 'application/json'\n  // 'Authorization': `Bearer ${getAuthToken()}`\n};\n\n\nfunction* getChart(rqst) {\n  try {\n    console.log('getChart rqst', rqst);\n    const response_ = yield axios.get(`${RESOURCE_PREFIX}/${rqst.payload}`, {headers});\n    console.log('response_', response_);\n    // #FFFF00 yellow, blue #0000FF, white #FFFFFF, skybue #87CEEB, red #FF0000, green #00FF00\n    const data2 = [\n      {\n        name: 'Temperature',\n        series: [30, 40, 45, 50, 49, 60, 70, 91],\n        seriesName: '',\n        categories: [1633833600001, 1633833600000, 1633833660000, 1633833720000, 1633833780000, 1633833780000,1633833840000, 1633834200000],\n        maxVal: 600,\n        label: ['Temperature'],\n        unit:'Farenheiht',\n        avg: 33,\n        max: 91,\n        min: 30,\n        color: '#FF0000'\n      },\n      {\n        name: 'Pressure',\n        series: [30, 40, 45, 50, 49, 60, 70, 91],\n        seriesName: '',\n        categories: [1633833600001, 1633833600000, 1633833660000, 1633833720000, 1633833780000, 1633833780000,1633833840000, 1633834200000],\n        maxVal: 600,\n        label: ['Pressure'],\n        unit:'psi',\n        avg: 34,\n        max: 91,\n        min: 30,\n        color: '#87CEEB'\n      },\n      ,\n      {\n        name: 'Humidity',\n        series: [30, 40, 45, 50, 49, 60, 70, 91],\n        seriesName: '',\n        categories: [1633833600001, 1633833600000, 1633833660000, 1633833720000, 1633833780000, 1633833780000,1633833840000, 1633834200000],\n        maxVal: 600,\n        label: ['Pressure'],\n        unit:'psi',\n        avg: 35,\n        max: 91,\n        min: 30,\n        color: '#00FF00'\n      }\n    ];\n    const data = response_.data;\n    const response = { data };\n    console.log('[fetch chart data]',response);\n    yield put(setGetChartSucceed(response));\n    console.log('[setGetChartSucceed done]',response);\n  } catch (err) {\n    const error = handleSagaError(err);\n    yield put(setGetChartFailure(error.debug));\n    // TOAST.error(error.debug);\n  }\n}\n\nfunction* chartSagaWatcher<T>(): Iterable<T> {\n  yield takeLatest(CHART_ACTIONS.ATTEMPT_TO_GET_CHART, getChart);\n}\n\nexport default chartSagaWatcher;\n","/Users/rodel/coding/akin/waps-client/src/store/sagas/dashboardSaga.js",[],"/Users/rodel/coding/akin/waps-client/src/store/actions/dashboardAction.js",[],"/Users/rodel/coding/akin/waps-client/src/utils/constants.js",[],"/Users/rodel/coding/akin/waps-client/src/store/actions/chartAction.js",[],"/Users/rodel/coding/akin/waps-client/src/Layouts/Pages/Dashboard/index.js",[],"/Users/rodel/coding/akin/waps-client/src/Layouts/Pages/Chart/index.js",[],"/Users/rodel/coding/akin/waps-client/src/Layouts/Pages/Setting/index.js",[],"/Users/rodel/coding/akin/waps-client/src/utils/helperFunctions.js",[],"/Users/rodel/coding/akin/waps-client/src/Layouts/Pages/Dashboard/DashboardContainer.js",["105","106","107","108","109"],"import React, { PureComponent } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport RadialStroked from \"../../Chart/RadialStroked\";\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer'\n\ntype State = {\n\n}\n\ntype Props = {\n    dashboardState : Object,\n    fetchDashboard: Function,\n    resetDashboard: Function\n}\n// let timer = 60;\n\nlet isLoading = false;\nlet timeInterval = 30000;\n\n\n\nclass DashboardContainer extends PureComponent<Props, State> {\n\n  constructor(props: Props, context: Context) {\n    super(props, context);\n    this.state = {\n      \n    }\n    this.timeMsg = 'Until refresh';\n    this.timerLimit = 30;\n    this.deviceData = {\n      Altitude: 0,\n      Created: \"\",\n      Humidity: 0,\n      Light: 0,\n      Nitrogen: 0,\n      Phosphorous: 0,\n      Potassium: 0,\n      Pressure: 0,\n      SoilMoisture: 0,\n      Temperature: 0,\n      WaterFlow: 0\n    }\n  }\n\n  componentWillMount() {\n    console.log('componentWillMount');\n    // const {fetchDashboard, resetDashboard } = this.props;\n    setTimeout(() => {\n      console.log('componentWillMount refreshing ...');\n      this.props.fetchDashboard('all');\n\t\t}, 1000);\n  }\n\n  componentDidMount() {\n    console.log('componentDidMount', this.timer);\n    this.timer = setInterval(() => {\n      this.isLoading = true;\n      console.log('componentDidMount refreshing ...');\n      this.props.fetchDashboard('all');\n    },(30000))\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  render() {\n    const { fetchDashboard, resetDashboard, dashboardState } = this.props;\n    console.log('dashboardState', dashboardState);\n    console.log('dashboardState data', dashboardState.data);\n    let data = [] ; \n    if (dashboardState && dashboardState.status === 'Succeed') {\n      console.log('deviceData ', new Date());\n      console.log('deviceData', dashboardState.data.data[0]);\n      this.deviceData = dashboardState.data.data[0];\n      this.setState({\n\t\t\t\t...this.state,\n        data: dashboardState.data.data[0]\n      })\n      console.log('deviceData', this.deviceData);\n      console.log('this.state', this.state);\n      // console.log('this.state.data.Temperature', this.state.data.Temperature);\n      this.isLoading = false;\n    } \n\n    const renderTime = ({ remainingTime }) => {\n      if (remainingTime === 1) {\n        this.timeMsg = 'Refreshing';\n        return <div className=\"timer\" style={{color: 'red', 'fontSize': '10px'}}>0</div>;\n      } else {\n        this.timeMsg = 'Until Refresh';\n      return (\n        <div className=\"timer\">\n          <div className=\"value\" style={{color: 'yellow', 'fontSize': '10px'}}>{remainingTime}</div>\n          {/* <div className=\"text\">Refresh in&nbsp;{remainingTime}&nbsp;seconds</div>\n          <div className=\"value\">{remainingTime}</div>\n          <div className=\"text\">seconds</div>  */}\n        </div>\n      );\n    }\n    };\n\n    return (\n    \n        <React.Fragment>\n            {/* <div style={{'margin-left': '50px'}}>\n                <p style={{color: 'white'}}>Reading @ Oct 23, 2021 10:30AM</p>\n            </div> */}\n            \n            <br/>\n            {!this.isLoading &&\n            <div style={{ display: this.isLoading ? \"none\" : \"block\" }}>\n              <div style={{'margin-left': '50px', display: 'flex'}}>\n                <CountdownCircleTimer\n                  isPlaying\n                  duration={30}\n                  colors={[[\"#004777\", 0.33], [\"#F7B801\", 0.33], [\"#A30000\"]]}\n                  size={30}\n                  strokeWidth={3}\n                  onComplete={() => [true, 1000]}\n                >\n                  {renderTime}\n                </CountdownCircleTimer>\n                <span style={{color: 'white', 'font-size': '14px'}}>&nbsp;&nbsp;{this.timeMsg}</span>\n                <span style={{color: 'white', 'fontSize': '14px'}}>&nbsp;&nbsp;&nbsp;Data shown are collected recorded on&nbsp;{this.deviceData.Created}</span>\n              </div>\n              <br/>\n              <div className=\"mt-inner\">\n                   <div class=\"div-dash\">\n                    <div class=\"row dashpad div-dash-head\">\n                      <div class=\"row st-no-pad-no-margin\">\n                      <RadialStroked\n                        series={[this.deviceData.Temperature]}\n                        maxVal={200}\n                        label={['Temperature']}\n                        unit={'Farenheiht'}\n                      />\n                      </div>\n                    </div>\n                  </div>\n\n                   <div class=\"div-dash\">\n                    <div class=\"row dashpad div-dash-head\">\n                      <div class=\"row st-no-pad-no-margin\">\n                      <RadialStroked\n                        series={[this.deviceData.Pressure]}\n                        label={['Pressure (psi)']}\n                        unit={'psi'}\n                      />\n                      </div>\n                    </div>\n                  </div>\n\n\n                   <div class=\"div-dash\">\n                    <div class=\"row dashpad div-dash-head\">\n                      <div class=\"row st-no-pad-no-margin\">\n                      <RadialStroked\n                        series={[this.deviceData.Altitude]}\n                        label={['Altitude (mbar)']}\n                        unit={'mbar'}\n                      />\n                      </div>\n                    </div>\n                  </div>\n\n                   <div class=\"div-dash\">\n                    <div class=\"row dashpad div-dash-head\">\n                      <div class=\"row st-no-pad-no-margin\">\n                      <RadialStroked\n                        series={[this.deviceData.Humidity]}\n                        label={['Humidity']}\n                        unit={''}\n                      />\n                      </div>\n                    </div>\n                  </div>\n\n                  <div class=\"div-dash\">\n                    <div class=\"row dashpad div-dash-head\">\n                      <div class=\"row st-no-pad-no-margin\">\n                      <RadialStroked\n                        series={[this.deviceData.SoilMoisture]}\n                        label={['Soil Moisture (%)']}\n                        unit={'percent'}\n                      />\n                      </div>\n                    </div>\n                  </div>\n\n                  <div class=\"div-dash\">\n                    <div class=\"row dashpad div-dash-head\">\n                      <div class=\"row st-no-pad-no-margin\">\n                      <RadialStroked\n                        series={[this.deviceData.Light]}\n                        label={['Light Intensity (lux)']}\n                        unit={'lux'}\n                      />\n                      </div>\n                    </div>\n                  </div>\n\n                  <div class=\"div-dash\">\n                    <div class=\"row dashpad div-dash-head\">\n                      <div class=\"row st-no-pad-no-margin\">\n                      <RadialStroked\n                        series={[this.deviceData.WaterFlow]}\n                        label={['Flow Meter (per min)']}\n                        unit={'per min'}\n                      />\n                      </div>\n                    </div>\n                  </div>\n\n                   <div class=\"div-dash\">\n                    <div class=\"row dashpad div-dash-head\">\n                      <div class=\"row st-no-pad-no-margin\">\n                      <RadialStroked\n                        series={[this.deviceData.Nitrogen]}\n                        label={['Nitrogen (mg/dL)']}\n                        unit={'mg/dL'}\n                      />\n                      </div>\n                    </div>\n                  </div>\n\n                   <div class=\"div-dash\">\n                    <div class=\"row dashpad div-dash-head\">\n                      <div class=\"row st-no-pad-no-margin\">\n                      <RadialStroked\n                        series={[this.deviceData.Phosphorous]}\n                        label={['Phosphorous (mg/dL)']}\n                        unit={'mg/dL'}\n                      />\n                      </div>\n                    </div>\n                  </div>\n\n                  <div class=\"div-dash\">\n                    <div class=\"row dashpad div-dash-head\">\n                      <div class=\"row st-no-pad-no-margin\">\n                      <RadialStroked\n                        series={[this.deviceData.Potassium]}\n                        label={['Potassium (ppm)']}\n                        unit={'ppm'}\n                      />\n                      </div>\n                    </div>\n                  </div>\n              </div>\n            </div>\n            }\n        </React.Fragment>\n    );\n  }\n}\n\nexport default withRouter(DashboardContainer);\n","/Users/rodel/coding/akin/waps-client/src/Layouts/Pages/Setting/SettingContainer.js",["110","111","112","113","114"],"import React, { PureComponent } from 'react';\nimport { withRouter, Link } from 'react-router-dom';\n\ntype State = {\n\n}\ntype Props = {\n    dashboardState : Object,\n    fetchDashboard: Function,\n    resetDashboard: Function\n}\n\nclass SettingContainer extends PureComponent<Props, State> {\n\n  constructor(props: Props, context: Context) {\n    super(props, context);\n    this.state = {\n     }\n  }\n\n\n  componentWillMount() {\n    console.log('componentWillMount');\n    const {fetchDashboard, resetDashboard } = this.props;\n    fetchDashboard();\n  }\n  componentDidMount() {\n    console.log('componentDidMount');\n    this.props.fetchDashboard('all');\n  }\n\n  render() {\n    const { fetchDashboard, resetDashboard, dashboardState } = this.props;\n    return (\n    \n        <React.Fragment>\n            <div >\n                <p>SETTING</p>\n            </div>\n        </React.Fragment>\n    );\n  }\n}\n\nexport default withRouter(SettingContainer);\n","/Users/rodel/coding/akin/waps-client/src/Layouts/Pages/Chart/ChartContainer.js",["115","116","117","118","119","120"],"import React, { PureComponent } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport LineSmooth from \"../../Chart/LineSmooth\";\nimport AreaTimeSeries from \"../../Chart/AreaTimeSeries\";\n\ntype State = {\n\n}\ntype Props = {\n    chartState : Object,\n    fetchChart: Function,\n    resetChart: Function\n}\n\nlet isLoading = false;\nclass ChartContainer extends PureComponent<Props, State> {\n\n  constructor(props: Props, context: Context) {\n    super(props, context);\n    this.state = {\n      dtGrp: 'thiswk'\n    };\n    this.chartData = [];\n  }\n\n  handleDtSlctChange = (dtGrp) => {\n    this.isLoading = true;\n    if (dtGrp && dtGrp.length) {\n      this.setState({\n        ...this.state,\n        dtGrp: dtGrp,\n      });\n    }\n    this.props.fetchChart(dtGrp ? dtGrp : this.state.dtGrp);\n\t};\n\n  componentWillMount() {\n    console.log('componentWillMount');\n    const {fetchChart } = this.props;\n    fetchChart('thisweek');\n  }\n  componentDidMount() {\n    console.log('componentDidMount');\n    this.props.fetchChart('thisweek');\n  }\n\n  render() {\n    const { chartState } = this.props;\n    console.log('chartState', chartState);\n    console.log('chartState data', chartState.data);\n    let data = [] ; \n    if (chartState && chartState.status === 'Succeed') {\n      console.log('chartData ', new Date());\n      console.log('chartData', chartState.data.data);\n      this.chartData = chartState.data.data;\n      this.setState({\n\t\t\t\t...this.state,\n        data: chartState.data.data\n      })\n      console.log('deviceData', this.chartData);\n      console.log('this.state', this.state);\n      // console.log('this.state.data.Temperature', this.state.data.Temperature);\n      this.isLoading = false;\n    } \n\n    return (\n        <React.Fragment>\n            <div>\n                    <div style={{marginBottom: '30px', marginLeft: '40px'}}>\n                        <button id=\"today\" className= { this.state.dtGrp === \"today\" ? \"active\" : null} onClick={() => this.handleDtSlctChange('today')} >\n                        Today\n                        </button>\n                        <button id=\"thiswk\" className= { this.state.dtGrp === \"thiswk\" ? \"active\" : null} onClick={() => this.handleDtSlctChange('thiswk')}>\n                        This Week\n                        </button>\n                        <button id=\"lastwk\" className= { this.state.dtGrp === \"lastwk\" ? \"active\" : null} onClick={() => this.handleDtSlctChange('lastwk')} >\n                        Last Week\n                        </button>\n                        <button id=\"thismonth\" className= { this.state.dtGrp === \"thismonth\" ? \"active\" : null} onClick={() => this.handleDtSlctChange('thismonth')}>\n                        This Month\n                        </button>\n                        <button id=\"lastmonth\" className= { this.state.dtGrp === \"lastmonth\" ? \"active\" : null} onClick={() => this.handleDtSlctChange('lastmonth')} >\n                        Last Month\n                        </button>\n                        <button id=\"thisyear\" className= { this.state.dtGrp === \"thisyear\" ? \"active\" : null} onClick={() => this.handleDtSlctChange('thisyear')}>\n                        This Year\n                        </button>&nbsp;&nbsp;&nbsp;&nbsp;\n                        <button id=\"refresh\" className= { this.state.dtGrp === \"refresh\" ? \"btn-refresh\" : \"btn-refresh\"} onClick={() => this.handleDtSlctChange(this.state.dtGrp)}>\n                        Refresh\n                        </button>\n                    </div>\n                    <div>\n                        { (!this.isLoading && this.chartData && this.chartData.length) &&\n                          this.chartData.map(data => (\n                            <div className=\"col-md-12\" style={{display: 'flex', marginBottom: '30px'}} id={data.name}>\n                              <div className=\"col-md-9\" style={{ marginLeft: '20px', marginRight: '20px', border: '1px solid', paddingTop: '20px'}} id={data.name + '_a'}>\n                                <LineSmooth\n                                  series={data.series}\n                                  seriesName={data.seriesName}\n                                  categories={data.categories}\n                                  maxVal={data.maxVal}\n                                  name={data.name}\n                                  unit={data.unit}\n                                  color={data.color}\n                                />\n                              </div>\n                              <div className=\"col-md-2\" style={{ marginTop: '0px', marginLeft: '20px', marginRight: '20px', border: '1px solid'}} id={data.name + '_b'}>\n                                  <div className=\"div-chart-sum\" id={data.name + '_ba'}>\n                                      <div id={data.name + '_bb'}>\n                                        <ul>\n                                            <li id={data.name + '1'}>\n                                              <a>Average&nbsp;:&nbsp;{data.avg}</a>\n                                            </li>\n                                            <li id={data.name + '2'}>\n                                              <a>Maximum&nbsp;:&nbsp;{data.max}</a>\n                                            </li>\n                                            <li id={data.name + '3'}>\n                                              <a>Minimum&nbsp;:&nbsp;{data.min}</a>\n                                            </li>\n                                        </ul>\n                                      </div>\n                                  </div>\n                              </div>\n                            </div>\n                          ))\n                        }\n                    </div>\n            </div>\n        </React.Fragment>\n    );\n  }\n}\n\nexport default withRouter(ChartContainer);\n","/Users/rodel/coding/akin/waps-client/src/store/selectors/chartSelector.js",[],"/Users/rodel/coding/akin/waps-client/src/store/selectors/dashboardSelector.js",[],"/Users/rodel/coding/akin/waps-client/src/Layouts/Chart/RadialStroked.js",[],"/Users/rodel/coding/akin/waps-client/src/Layouts/Chart/AreaTimeSeries.js",["121"],"import React, { Component } from \"react\";\nimport Chart from \"react-apexcharts\";\n\nclass AreaTimeSeries extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    \n      series: [{\n        data: [\n          [1327359600000,30.95],\n          [1327446000000,31.34],\n          [1327532400000,31.18],\n          [1327618800000,31.05],\n          [1327878000000,31.00],\n          [1327964400000,30.95],\n          [1328050800000,31.24],\n          [1328137200000,31.29],\n          [1328223600000,31.85],\n          [1328482800000,31.86],\n          [1328569200000,32.28],\n          [1328655600000,32.10],\n          [1328742000000,32.65],\n          [1328828400000,32.21],\n          [1329087600000,32.35],\n          [1329174000000,32.44],\n          [1329260400000,32.46],\n          [1329346800000,32.86],\n          [1329433200000,32.75],\n          [1329778800000,32.54],\n          [1329865200000,32.33],\n          [1329951600000,32.97],\n          [1330038000000,33.41],\n          [1330297200000,33.27],\n          [1330383600000,33.27],\n          [1330470000000,32.89],\n          [1330556400000,33.10],\n          [1330642800000,33.73],\n          [1330902000000,33.22],\n          [1330988400000,31.99],\n          [1331074800000,32.41],\n          [1331161200000,33.05],\n          [1331247600000,33.64],\n          [1331506800000,33.56],\n          [1331593200000,34.22],\n          [1331679600000,33.77],\n          [1331766000000,34.17],\n          [1331852400000,33.82],\n          [1332111600000,34.51],\n          [1332198000000,33.16],\n          [1332284400000,33.56],\n          [1332370800000,33.71],\n          [1332457200000,33.81],\n          [1332712800000,34.40],\n          [1332799200000,34.63],\n          [1332885600000,34.46],\n          [1332972000000,34.48],\n          [1333058400000,34.31],\n          [1333317600000,34.70],\n          [1333404000000,34.31],\n          [1333490400000,33.46],\n          [1333576800000,33.59],\n          [1333922400000,33.22],\n          [1334008800000,32.61],\n          [1334095200000,33.01],\n          [1334181600000,33.55],\n          [1334268000000,33.18],\n          [1334527200000,32.84],\n          [1334613600000,33.84],\n          [1334700000000,33.39],\n          [1334786400000,32.91],\n          [1334872800000,33.06],\n          [1335132000000,32.62],\n          [1335218400000,32.40],\n          [1335304800000,33.13],\n          [1335391200000,33.26],\n          [1335477600000,33.58],\n          [1335736800000,33.55],\n          [1335823200000,33.77],\n          [1335909600000,33.76],\n          [1335996000000,33.32],\n          [1336082400000,32.61],\n          [1336341600000,32.52],\n          [1336428000000,32.67],\n          [1336514400000,32.52],\n          [1336600800000,31.92],\n          [1336687200000,32.20],\n          [1336946400000,32.23],\n          [1337032800000,32.33],\n          [1337119200000,32.36],\n          [1337205600000,32.01],\n          [1337292000000,31.31],\n          [1337551200000,32.01],\n          [1337637600000,32.01],\n          [1337724000000,32.18],\n          [1337810400000,31.54],\n          [1337896800000,31.60],\n          [1338242400000,32.05],\n          [1338328800000,31.29],\n          [1338415200000,31.05],\n          [1338501600000,29.82],\n          [1338760800000,30.31],\n          [1338847200000,30.70],\n          [1338933600000,31.69],\n          [1339020000000,31.32],\n          [1339106400000,31.65],\n          [1339365600000,31.13],\n          [1339452000000,31.77],\n          [1339538400000,31.79],\n          [1339624800000,31.67],\n          [1339711200000,32.39],\n          [1339970400000,32.63],\n          [1340056800000,32.89],\n          [1340143200000,31.99],\n          [1340229600000,31.23],\n          [1340316000000,31.57],\n          [1340575200000,30.84],\n          [1340661600000,31.07],\n          [1340748000000,31.41],\n          [1340834400000,31.17],\n          [1340920800000,32.37],\n          [1341180000000,32.19],\n          [1341266400000,32.51],\n          [1341439200000,32.53],\n          [1341525600000,31.37],\n          [1341784800000,30.43],\n          [1341871200000,30.44],\n          [1341957600000,30.20],\n          [1342044000000,30.14],\n          [1342130400000,30.65],\n          [1342389600000,30.40],\n          [1342476000000,30.65],\n          [1342562400000,31.43],\n          [1342648800000,31.89],\n          [1342735200000,31.38],\n          [1342994400000,30.64],\n          [1343080800000,30.02],\n          [1343167200000,30.33],\n          [1343253600000,30.95],\n          [1343340000000,31.89],\n          [1343599200000,31.01],\n          [1343685600000,30.88],\n          [1343772000000,30.69],\n          [1343858400000,30.58],\n          [1343944800000,32.02],\n          [1344204000000,32.14],\n          [1344290400000,32.37],\n          [1344376800000,32.51],\n          [1344463200000,32.65],\n          [1344549600000,32.64],\n          [1344808800000,32.27],\n          [1344895200000,32.10],\n          [1344981600000,32.91],\n          [1345068000000,33.65],\n          [1345154400000,33.80],\n          [1345413600000,33.92],\n          [1345500000000,33.75],\n          [1345586400000,33.84],\n          [1345672800000,33.50],\n          [1345759200000,32.26],\n          [1346018400000,32.32],\n          [1346104800000,32.06],\n          [1346191200000,31.96],\n          [1346277600000,31.46],\n          [1346364000000,31.27],\n          [1346709600000,31.43],\n          [1346796000000,32.26],\n          [1346882400000,32.79],\n          [1346968800000,32.46],\n          [1347228000000,32.13],\n          [1347314400000,32.43],\n          [1347400800000,32.42],\n          [1347487200000,32.81],\n          [1347573600000,33.34],\n          [1347832800000,33.41],\n          [1347919200000,32.57],\n          [1348005600000,33.12],\n          [1348092000000,34.53],\n          [1348178400000,33.83],\n          [1348437600000,33.41],\n          [1348524000000,32.90],\n          [1348610400000,32.53],\n          [1348696800000,32.80],\n          [1348783200000,32.44],\n          [1349042400000,32.62],\n          [1349128800000,32.57],\n          [1349215200000,32.60],\n          [1349301600000,32.68],\n          [1349388000000,32.47],\n          [1349647200000,32.23],\n          [1349733600000,31.68],\n          [1349820000000,31.51],\n          [1349906400000,31.78],\n          [1349992800000,31.94],\n          [1350252000000,32.33],\n          [1350338400000,33.24],\n          [1350424800000,33.44],\n          [1350511200000,33.48],\n          [1350597600000,33.24],\n          [1350856800000,33.49],\n          [1350943200000,33.31],\n          [1351029600000,33.36],\n          [1351116000000,33.40],\n          [1351202400000,34.01],\n          [1351638000000,34.02],\n          [1351724400000,34.36],\n          [1351810800000,34.39],\n          [1352070000000,34.24],\n          [1352156400000,34.39],\n          [1352242800000,33.47],\n          [1352329200000,32.98],\n          [1352415600000,32.90],\n          [1352674800000,32.70],\n          [1352761200000,32.54],\n          [1352847600000,32.23],\n          [1352934000000,32.64],\n          [1353020400000,32.65],\n          [1353279600000,32.92],\n          [1353366000000,32.64],\n          [1353452400000,32.84],\n          [1353625200000,33.40],\n          [1353884400000,33.30],\n          [1353970800000,33.18],\n          [1354057200000,33.88],\n          [1354143600000,34.09],\n          [1354230000000,34.61],\n          [1354489200000,34.70],\n          [1354575600000,35.30],\n          [1354662000000,35.40],\n          [1354748400000,35.14],\n          [1354834800000,35.48],\n          [1355094000000,35.75],\n          [1355180400000,35.54],\n          [1355266800000,35.96],\n          [1355353200000,35.53],\n          [1355439600000,37.56],\n          [1355698800000,37.42],\n          [1355785200000,37.49],\n          [1355871600000,38.09],\n          [1355958000000,37.87],\n          [1356044400000,37.71],\n          [1356303600000,37.53],\n          [1356476400000,37.55],\n          [1356562800000,37.30],\n          [1356649200000,36.90],\n          [1356908400000,37.68],\n          [1357081200000,38.34],\n          [1357167600000,37.75],\n          [1357254000000,38.13],\n          [1357513200000,37.94],\n          [1357599600000,38.14],\n          [1357686000000,38.66],\n          [1357772400000,38.62],\n          [1357858800000,38.09],\n          [1358118000000,38.16],\n          [1358204400000,38.15],\n          [1358290800000,37.88],\n          [1358377200000,37.73],\n          [1358463600000,37.98],\n          [1358809200000,37.95],\n          [1358895600000,38.25],\n          [1358982000000,38.10],\n          [1359068400000,38.32],\n          [1359327600000,38.24],\n          [1359414000000,38.52],\n          [1359500400000,37.94],\n          [1359586800000,37.83],\n          [1359673200000,38.34],\n          [1359932400000,38.10],\n          [1360018800000,38.51],\n          [1360105200000,38.40],\n          [1360191600000,38.07],\n          [1360278000000,39.12],\n          [1360537200000,38.64],\n          [1360623600000,38.89],\n          [1360710000000,38.81],\n          [1360796400000,38.61],\n          [1360882800000,38.63],\n          [1361228400000,38.99],\n          [1361314800000,38.77],\n          [1361401200000,38.34],\n          [1361487600000,38.55],\n          [1361746800000,38.11],\n          [1361833200000,38.59],\n          [1361919600000,39.60],\n        ]\n      }],\n      options: {\n        chart: {\n          id: 'area-datetime',\n          type: 'area',\n          height: 350,\n          zoom: {\n            autoScaleYaxis: true\n          }\n        },\n        annotations: {\n          yaxis: [{\n            y: 30,\n            borderColor: '#999',\n            label: {\n              show: true,\n              text: 'Support',\n              style: {\n                color: \"#fff\",\n                background: '#00E396'\n              }\n            }\n          }],\n          xaxis: [{\n            x: new Date('14 Nov 2012').getTime(),\n            borderColor: '#999',\n            yAxisIndex: 0,\n            label: {\n              show: true,\n              text: '',\n              style: {\n                color: \"#fff\",\n                background: '#775DD0'\n              }\n            }\n          }]\n        },\n        dataLabels: {\n          enabled: false\n        },\n        markers: {\n          size: 0,\n          style: 'hollow',\n        },\n        xaxis: {\n          type: 'datetime',\n          min: new Date('01 Mar 2012').getTime(),\n          tickAmount: 6,\n        },\n        tooltip: {\n          x: {\n            format: 'dd MMM yyyy'\n          }\n        },\n        fill: {\n          type: 'gradient',\n          gradient: {\n            shadeIntensity: 1,\n            opacityFrom: 0.7,\n            opacityTo: 0.9,\n            stops: [0, 100]\n          }\n        },\n      },\n    \n    \n      selection: 'one_year',\n    \n    };\n  }\n\n\n  updateData(timeline) {\n    this.setState({\n      selection: timeline\n    })\n  \n    switch (timeline) {\n      case 'one_month':\n        AreaTimeSeries.exec(\n          'area-datetime',\n          'zoomX',\n          new Date('28 Jan 2013').getTime(),\n          new Date('27 Feb 2013').getTime()\n        )\n        break\n      case 'six_months':\n        AreaTimeSeries.exec(\n          'area-datetime',\n          'zoomX',\n          new Date('27 Sep 2012').getTime(),\n          new Date('27 Feb 2013').getTime()\n        )\n        break\n      case 'one_year':\n        AreaTimeSeries.exec(\n          'area-datetime',\n          'zoomX',\n          new Date('27 Feb 2012').getTime(),\n          new Date('27 Feb 2013').getTime()\n        )\n        break\n      case 'ytd':\n        AreaTimeSeries.exec(\n          'area-datetime',\n          'zoomX',\n          new Date('01 Jan 2013').getTime(),\n          new Date('27 Feb 2013').getTime()\n        )\n        break\n      case 'all':\n        AreaTimeSeries.exec(\n          'area-datetime',\n          'zoomX',\n          new Date('23 Jan 2012').getTime(),\n          new Date('27 Feb 2013').getTime()\n        )\n        break\n      default:\n    }\n  }\n\n\n  render() {\n    return (\n      <div id=\"chart\">\n        {/* <div class=\"toolbar\">\n          <button id=\"one_month\"\n            \n            onClick={()=>this.updateData('one_month')} className={ (this.state.selection==='one_month' ? 'active' : '')}>\n          1M\n          </button>\n          &nbsp;\n          <button id=\"six_months\"\n            \n            onClick={()=>this.updateData('six_months')} className={ (this.state.selection==='six_months' ? 'active' : '')}>\n          6M\n          </button>\n          &nbsp;\n          <button id=\"one_year\"\n            \n            \n            onClick={()=>this.updateData('one_year')} className={ (this.state.selection==='one_year' ? 'active' : '')}>\n          1Y\n          </button>\n          &nbsp;\n          <button id=\"ytd\"\n            \n            onClick={()=>this.updateData('ytd')} className={ (this.state.selection==='ytd' ? 'active' : '')}>\n          YTD\n          </button>\n          &nbsp;\n          <button id=\"all\"\n            \n            onClick={()=>this.updateData('all')} className={ (this.state.selection==='all' ? 'active' : '')}>\n          ALL\n          </button>\n        </div> */}\n\n        <div id=\"chart-timeline\">\n          <Chart options={this.state.options} series={this.state.series} type=\"area\" width=\"100%\" height=\"180px\"/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AreaTimeSeries;","/Users/rodel/coding/akin/waps-client/src/Layouts/Chart/LineSmooth.js",["122"],"import React, { Component } from \"react\";\nimport Chart from \"react-apexcharts\";\n\nclass LineSmooth extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      options: {\n        chart: {\n          id: \"basic-bar\",\n          type: 'area',\n          height: 350,\n          zoom: {\n            autoScaleYaxis: true\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        // fill: {\n        //   type: 'gradient',\n        //   gradient: {\n        //     shadeIntensity: 1,\n        //     opacityFrom: 0.7,\n        //     opacityTo: 0.9,\n        //     stops: [0, 100]\n        //   }\n        // },\n        fill: {\n          type: 'gradient',\n          colors: [props.color],\n          opacity: 0.2,\n          type: 'solid',\n          // gradient: {\n          //   shadeIntensity: 1,\n          //   opacityFrom: 0.7,\n          //   opacityTo: 0.6,\n          //   stops: [0, 100]\n          // }\n        },\n        markers: {\n          size: 0,\n          style: 'hollow',\n        },\n        xaxis: {\n          categories: props.categories,\n          tickAmount: 10,\n          type: 'datetime'\n        },\n        // xaxis: {\n        //   type: 'datetime',\n        //   min: new Date('01 Mar 2012').getTime(),\n        //   tickAmount: 6,\n        // },\n        stroke: {\n          // curve: 'smooth',\n          width: 5,\n          colors: [props.color] // #FFFF00 yellow, blue #0000FF, white #FFFFFF, skybue #87CEEB, red #FF0000\n        },\n        grid: {\n          show: true,\n          borderColor: 'gray',\n          strokeDashArray: 1,\n          position: 'back',\n          xaxis: {\n              lines: {\n                  show: true\n              }\n          },   \n          yaxis: {\n              lines: {\n                  show: true\n              }\n          },  \n          row: {\n              colors: undefined,\n              opacity: 0.5\n          },  \n          column: {\n              colors: undefined,\n              opacity: 0.5\n          },  \n          padding: {\n              top: 0,\n              right: 0,\n              bottom: 0,\n              left: 0\n          },  \n        },\n        title: {\n          text: props.name,\n          align: 'center',\n          margin: 10,\n          offsetX: 0,\n          offsetY: 0,\n          floating: false,\n          style: {\n            fontSize:  '14px',\n            fontWeight:  'bold',\n            fontFamily:  undefined,\n            color:  'gray'\n          },\n        }\n      },\n      series: [\n        {\n          name: props.seriesName,\n          data: props.series\n        }\n      ]\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <div >\n          <div className=\"mixed-chart\">\n            <Chart\n              options={this.state.options}\n              series={this.state.series}\n              type=\"area\"\n              width=\"100%\"\n              height=\"180px\"\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LineSmooth;",{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":29,"column":11,"nodeType":"129","messageId":"130","endLine":29,"endColumn":16},{"ruleId":"131","severity":1,"message":"132","line":29,"column":19,"nodeType":"133","messageId":"134","endLine":70,"endColumn":6},{"ruleId":"127","severity":1,"message":"135","line":17,"column":5,"nodeType":"129","messageId":"130","endLine":17,"endColumn":14},{"ruleId":"127","severity":1,"message":"136","line":18,"column":5,"nodeType":"129","messageId":"130","endLine":18,"endColumn":17},{"ruleId":"127","severity":1,"message":"137","line":69,"column":13,"nodeType":"129","messageId":"130","endLine":69,"endColumn":27},{"ruleId":"127","severity":1,"message":"138","line":69,"column":29,"nodeType":"129","messageId":"130","endLine":69,"endColumn":43},{"ruleId":"127","severity":1,"message":"139","line":72,"column":9,"nodeType":"129","messageId":"130","endLine":72,"endColumn":13},{"ruleId":"127","severity":1,"message":"140","line":2,"column":22,"nodeType":"129","messageId":"130","endLine":2,"endColumn":26},{"ruleId":"127","severity":1,"message":"138","line":24,"column":28,"nodeType":"129","messageId":"130","endLine":24,"endColumn":42},{"ruleId":"127","severity":1,"message":"137","line":33,"column":13,"nodeType":"129","messageId":"130","endLine":33,"endColumn":27},{"ruleId":"127","severity":1,"message":"138","line":33,"column":29,"nodeType":"129","messageId":"130","endLine":33,"endColumn":43},{"ruleId":"127","severity":1,"message":"141","line":33,"column":45,"nodeType":"129","messageId":"130","endLine":33,"endColumn":59},{"ruleId":"127","severity":1,"message":"142","line":4,"column":8,"nodeType":"129","messageId":"130","endLine":4,"endColumn":22},{"ruleId":"127","severity":1,"message":"135","line":15,"column":5,"nodeType":"129","messageId":"130","endLine":15,"endColumn":14},{"ruleId":"127","severity":1,"message":"139","line":51,"column":9,"nodeType":"129","messageId":"130","endLine":51,"endColumn":13},{"ruleId":"143","severity":1,"message":"144","line":112,"column":47,"nodeType":"145","endLine":112,"endColumn":50},{"ruleId":"143","severity":1,"message":"144","line":115,"column":47,"nodeType":"145","endLine":115,"endColumn":50},{"ruleId":"143","severity":1,"message":"144","line":118,"column":47,"nodeType":"145","endLine":118,"endColumn":50},{"ruleId":"127","severity":1,"message":"146","line":1,"column":17,"nodeType":"129","messageId":"130","endLine":1,"endColumn":26},{"ruleId":"147","severity":1,"message":"148","line":34,"column":11,"nodeType":"149","messageId":"150","endLine":34,"endColumn":15},"no-native-reassign",["151"],"no-negated-in-lhs",["152"],"no-unused-vars","'data2' is assigned a value but never used.","Identifier","unusedVar","no-sparse-arrays","Unexpected comma in middle of array.","ArrayExpression","unexpectedSparseArray","'isLoading' is assigned a value but never used.","'timeInterval' is assigned a value but never used.","'fetchDashboard' is assigned a value but never used.","'resetDashboard' is assigned a value but never used.","'data' is assigned a value but never used.","'Link' is defined but never used.","'dashboardState' is assigned a value but never used.","'AreaTimeSeries' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Component' is defined but never used.","no-dupe-keys","Duplicate key 'type'.","ObjectExpression","unexpected","no-global-assign","no-unsafe-negation"]